#include<iostream>
#include<stdio.h>
using namespace std;
class xianxing {
public:
	virtual void in(int i) = 0;
	virtual void out() = 0;
};
class shunxu :virtual public xianxing {
public:
	virtual void in(int n) = 0;
	virtual void out() = 0;
};
class lianshi :virtual public shunxu {
public:
	typedef struct XXx
	{
		int a;
		XXx *next;
	}*XXX;
	XXX n;
	void hhhh()
	{
		n = (XXX)malloc(sizeof(XXx));
		if (n == NULL)
		{
			cout << "内存分配失败";
			exit(0);
		}
		n->next = NULL;
	}
};

class zhan :virtual public lianshi {
public:
	void in(int i);
	void out();
};
void zhan::in(int b)
{
		XXX p = (XXX)malloc(sizeof(XXx));
		p->a = b;
		p->next = n->next;
		n->next = p;
}
void zhan::out()
{
	XXX q;
	q = n->next;
	while (q != NULL)
	{
		cout << q->a << " ";
		q = q->next;
	}
	cout << endl;
}
class dui :virtual public lianshi {
public:
	void in(int a);
	void out();
};
void dui::in(int b)
{
	int a;
	cin >> a;
	XXX t;
	XXX y;
	t = (XXX)malloc(sizeof(XXx));
	n->next = t;
	t->a = a;
	b = b - 1;
	while (b != 0)
	{
		y = (XXX)malloc(sizeof(XXx));
		t->next = y;
		t = y;
		cin >> t->a;
		t->next = NULL;
		b--;
	}

}
void dui::out()
{
	XXX L;
	L = n->next;
	while (L->next != NULL)
	{
		cout << L->a << " ";
		L = L->next;
	}
	cout << L->a << " ";
	cout << endl;
}
int main()
{
	int e;
	zhan b;
	dui c;
	lianshi *i = &b;
	i->hhhh();
	cout << "请输入四个数" << endl;
	cin >> e;
	i->in(e);
	cin >> e;
	i->in(e);
	cin >> e;
	i->in(e);
	cin >> e;
	i->in(e);
	i->out();
	i = &c;
	i->hhhh();
	cout << "你想输入几个数" << endl;
	cin >> e;
	i->in(e);
	i->out();
	system("pause");
	return 0;


}